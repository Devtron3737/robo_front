{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Desktop/projects/robo/robo_front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { parse } from '@vanillaes/csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://storage.googleapis.com/robo_date/robo_profs%20-%20robo_profs.csv\", {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(csv_string => {\n      console.log(\"THIS IS THE CSV STRING\");\n      console.log(csv_string);\n      const parsed = parse(csv_string);\n      console.log(\"THIS IS PARSED\");\n      console.log(parsed);\n    }); // .then(\n    //     (result) => {\n    //         setIsLoaded(true);\n    //         setItems(result);\n    //     },\n    //     // Note: it's important to handle errors here\n    //     // instead of a catch() block so that we don't swallow\n    //     // exceptions from actual bugs in components.\n    //     (error) => {\n    //         setIsLoaded(true);\n    //         setError(error);\n    //     }\n    // )\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/devin/Desktop/projects/robo/robo_front/src/App.js"],"names":["React","useState","useEffect","parse","App","items","setItems","fetch","headers","then","csv_string","console","log","parsed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CACG,0EADH,EAEG;AAACC,MAAAA,OAAO,EAAE;AAAC,uCAA+B;AAAhC;AAAV,KAFH,CAAL,CAIKC,IAJL,CAIUC,UAAU,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,YAAMG,MAAM,GAAGV,KAAK,CAACO,UAAD,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,KAXL,EADY,CAaR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GAnCQT,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport './App.css'\nimport { parse } from '@vanillaes/csv';\n\nfunction App() {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        fetch(\n                \"https://storage.googleapis.com/robo_date/robo_profs%20-%20robo_profs.csv\",\n                {headers: {\"Access-Control-Allow-Origin\": \"*\"}}\n            )\n            .then(csv_string => {\n                console.log(\"THIS IS THE CSV STRING\")\n                console.log(csv_string)\n\n                const parsed = parse(csv_string)\n                console.log(\"THIS IS PARSED\")\n                console.log(parsed);\n            })\n            // .then(\n            //     (result) => {\n            //         setIsLoaded(true);\n            //         setItems(result);\n            //     },\n            //     // Note: it's important to handle errors here\n            //     // instead of a catch() block so that we don't swallow\n            //     // exceptions from actual bugs in components.\n            //     (error) => {\n            //         setIsLoaded(true);\n            //         setError(error);\n            //     }\n            // )\n    }, [])\n\n    return (\n        <div className=\"App\">\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}